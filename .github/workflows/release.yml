name: Plugin Release

on:
  # Trigger this workflow when a new tag matching the pattern is pushed
  # Example tags: gemini_manifold/v1.16.0, system_prompt_injector/v1.0.0
  push:
    tags:
      - '*/v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      # Needed to create releases and upload assets
      contents: write
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        # Fetch all history so annotated tag messages are available
        with:
          fetch-depth: 0

      # Step 2: Parse tag name using external script
      - name: Parse Tag
        id: parse_tag
        run: .github/scripts/parse_tag.sh

      # Step 3: Find Plugin File Path using external script
      - name: Find Plugin File
        id: find_plugin_file
        run: .github/scripts/find_plugin_file.sh
        env:
          PLUGIN_NAME: ${{ steps.parse_tag.outputs.plugin_name }}

      # Step 4: Create the GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          # Use the full tag name that triggered the workflow
          tag_name: ${{ github.ref_name }}
          # Create a descriptive release name using parsed outputs
          name: Release ${{ steps.parse_tag.outputs.plugin_name }} ${{ steps.parse_tag.outputs.version }}
          # Use the annotated tag message as the release body (notes)
          body: |
            ${{ github.event.head_commit.message || 'No description provided.' }}
          # Attach the plugin file directly if its path was found
          files: ${{ steps.find_plugin_file.outputs.plugin_path }}
          draft: false
          prerelease: false
        env:
          # GITHUB_TOKEN is automatically provided by GitHub Actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}